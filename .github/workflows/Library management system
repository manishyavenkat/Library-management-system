#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Book structure
struct Book {
    string title;
    string author;
    int year;
};

// Library class
class Library {
private:
    vector<Book> books;

public:
    // Function to add a book to the library
    void addBook(const Book& book) {
        books.push_back(book);
        cout << "Book added successfully!" << endl;
    }

    // Function to display all books in the library
    void displayBooks() {
        if (books.empty()) {
            cout << "No books in the library." << endl;
            return;
        }

        cout << "Books in the library:" << endl;
        cout << "Title\t\tAuthor\t\tYear" << endl;
        for (const auto& book : books) {
            cout << book.title << "\t\t" << book.author << "\t\t" << book.year << endl;
        }
    }

    // Function to search for a book by title
    void searchBook(const string& title) {
        bool found = false;
        for (const auto& book : books) {
            if (book.title == title) {
                cout << "Book found:" << endl;
                cout << "Title\t\tAuthor\t\tYear" << endl;
                cout << book.title << "\t\t" << book.author << "\t\t" << book.year << endl;
                found = true;
                break;
            }
        }
        if (!found) {
            cout << "Book not found." << endl;
        }
    }
};

int main() {
    Library library;
    int choice;
    do {
        cout << "\nLibrary Management System" << endl;
        cout << "1. Add Book" << endl;
        cout << "2. Display Books" << endl;
        cout << "3. Search Book" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                Book book;
                cout << "Enter book title: ";
                cin.ignore();
                getline(cin, book.title);
                cout << "Enter book author: ";
                getline(cin, book.author);
                cout << "Enter publication year: ";
                cin >> book.year;
                library.addBook(book);
                break;
            }
            case 2:
                library.displayBooks();
                break;
            case 3: {
                string title;
                cout << "Enter book title to search: ";
                cin.ignore();
                getline(cin, title);
                library.searchBook(title);
                break;
            }
            case 4:
                cout << "Exiting program. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice! Please enter a valid option." << endl;
        }
    } while (choice != 4);

    return 0;
}
